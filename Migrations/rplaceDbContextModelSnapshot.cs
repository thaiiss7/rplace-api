// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rplace.Models;

#nullable disable

namespace rplace_api.Migrations
{
    [DbContext(typeof(rplaceDbContext))]
    partial class rplaceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Rplace.Models.GiftCard", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlanId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("PlanId");

                    b.ToTable("GiftCards");
                });

            modelBuilder.Entity("Rplace.Models.Invite", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Receiverid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("Receiverid");

                    b.HasIndex("RoomId");

                    b.HasIndex("SenderId");

                    b.ToTable("Invites");
                });

            modelBuilder.Entity("Rplace.Models.ItemRoom", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("RoomId")
                        .IsUnique();

                    b.ToTable("ItemRooms");
                });

            modelBuilder.Entity("Rplace.Models.Pixel", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Blue")
                        .HasColumnType("int");

                    b.Property<int>("Green")
                        .HasColumnType("int");

                    b.Property<int>("Red")
                        .HasColumnType("int");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("X")
                        .HasColumnType("int");

                    b.Property<int>("Y")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RoomId");

                    b.ToTable("Pixels");
                });

            modelBuilder.Entity("Rplace.Models.Plan", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("Rplace.Models.Profile", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ItemRoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RoomID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ItemRoomId");

                    b.HasIndex("PlanId");

                    b.HasIndex("RoomID");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("Rplace.Models.Role", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleRoomID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("ProfileId");

                    b.HasIndex("RoleRoomID");

                    b.HasIndex("RoomId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Rplace.Models.Room", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProfileId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Rplace.Models.GiftCard", b =>
                {
                    b.HasOne("Rplace.Models.Plan", "PlanGiftCard")
                        .WithMany("GiftCards")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("PlanGiftCard");
                });

            modelBuilder.Entity("Rplace.Models.Invite", b =>
                {
                    b.HasOne("Rplace.Models.Profile", "Receiver")
                        .WithMany("Invites")
                        .HasForeignKey("Receiverid")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Rplace.Models.Room", "InviteRoom")
                        .WithMany("Invites")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Rplace.Models.Profile", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InviteRoom");

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("Rplace.Models.ItemRoom", b =>
                {
                    b.HasOne("Rplace.Models.Room", "Room")
                        .WithOne("ItemRoom")
                        .HasForeignKey("Rplace.Models.ItemRoom", "RoomId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Rplace.Models.Pixel", b =>
                {
                    b.HasOne("Rplace.Models.Room", "PixelRoom")
                        .WithMany("Pixels")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("PixelRoom");
                });

            modelBuilder.Entity("Rplace.Models.Profile", b =>
                {
                    b.HasOne("Rplace.Models.ItemRoom", "ItemRoom")
                        .WithMany("Members")
                        .HasForeignKey("ItemRoomId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Rplace.Models.Plan", "Plan")
                        .WithMany("Profiles")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Rplace.Models.Room", null)
                        .WithMany("Members")
                        .HasForeignKey("RoomID");

                    b.Navigation("ItemRoom");

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("Rplace.Models.Role", b =>
                {
                    b.HasOne("Rplace.Models.Profile", "RoleProfile")
                        .WithMany()
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rplace.Models.Room", "RoleRoom")
                        .WithMany()
                        .HasForeignKey("RoleRoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rplace.Models.ItemRoom", "ItemRoom")
                        .WithMany("Roles")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ItemRoom");

                    b.Navigation("RoleProfile");

                    b.Navigation("RoleRoom");
                });

            modelBuilder.Entity("Rplace.Models.Room", b =>
                {
                    b.HasOne("Rplace.Models.Profile", "Owner")
                        .WithMany("Rooms")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Rplace.Models.ItemRoom", b =>
                {
                    b.Navigation("Members");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("Rplace.Models.Plan", b =>
                {
                    b.Navigation("GiftCards");

                    b.Navigation("Profiles");
                });

            modelBuilder.Entity("Rplace.Models.Profile", b =>
                {
                    b.Navigation("Invites");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("Rplace.Models.Room", b =>
                {
                    b.Navigation("Invites");

                    b.Navigation("ItemRoom")
                        .IsRequired();

                    b.Navigation("Members");

                    b.Navigation("Pixels");
                });
#pragma warning restore 612, 618
        }
    }
}
